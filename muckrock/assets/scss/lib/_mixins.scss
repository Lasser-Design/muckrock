@mixin background-gradient($color) {
    background: $color;
    @include background(linear-gradient($color, darken($color, $base-gradient-darken)));
}

@mixin button($color-main) {
  $color-dark: darken($color-main, 10%);
  $shadow-normal: 3px;
  $shadow-hover: 5px;
  $shadow-active: 2px;
  // Metrics
  display: inline-block;
  margin: $base-margin/4 0;
  border: 1px solid $color-dark;
  border-radius: $base-border-radius;
  padding: $base-padding/4 $base-padding/2;
  box-shadow: 0px $shadow-normal 0px 0px $color-dark;
  // Type
  background: $color-main;
  color: #FFFFFF;
  text-align: center;
  text-decoration: none;
  // Transitions
  transition-property: box-shadow transform;
  transition-duration: .15s;
  transition-timing-function: ease;
  // Misc
  cursor: pointer;
  appearance: none;
  outline: none;
  // State
  &:link, &:visited {
    box-shadow: 0px $shadow-normal 0px 0px $color-dark;
  }
  &:hover {
    transform: translateY($shadow-normal - $shadow-hover);
    box-shadow: 0px $shadow-hover 0px 0px $color-dark;
    text-decoration: none;
  }
  &:active {
    transform: translateY($shadow-normal - $shadow-active);
    box-shadow: 0px $shadow-active 0px 0px $color-dark;
  }
  &:disabled:hover {
    transform: none;
    box-shadow: 0 $shadow-normal 0 0 $color-dark;
  }
}

@mixin panel-color($color, $disabled: false) {
    @if not $disabled {
        color: $color-white;
        @include background-gradient($color);
        border-color: darken($color, 10%);
    } @else {
        color: $color;
        background: none;
    }
}

@mixin active-button {
    color: $color-white;
    border-color: $color-selected;
    background: $color-selected;
    svg { fill: $color-white; }
}

@mixin classifier($status, $color) {
    &.#{$status} {
        color: $color-white;
        @include background-gradient($color);
        border: 1px solid darken($color, 15%);
    }
}

@mixin colorize-icon($color) {
    .svg-icon path,
    .svg-icon polygon,
    .svg-icon rect {
        fill: $color;
    }
    .svg-icon circle { stroke: $color; }
}

@mixin font-sizing($size-multiplier, $line-multiplier:3) {
    $size: 1em * $size-multiplier;
    $line: 1em + (1em / ($base-vertical-rhythm * $line-multiplier));
    font-size: $size;
    line-height: $line;
    margin: $line/4 0;
}

@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}
